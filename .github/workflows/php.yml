name: PHP Composer
# https://github.com/unijohn/student-yii/workflows/<WORKFLOW_NAME>/badge.svg
# ![example workflow file path](https://github.com/unijohn/student-yii/workflows/.github/workflows/php.yml/badge.svg)
# ![example branch parameter](https://github.com/unijohn/student-yii/workflows/<WORKFLOW_NAME>/badge.svg?branch=feature-1)

on:
  push:
    branches: 
      - master
#   tags: 
#     - v1

# file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'models/*'
      - 'controllers/*'
      - 'views/*'

# Ignore on pull since it is a one man shop currently
#  pull_request:
#    branches: [ master ]
jobs:
  run:    
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest]
        php-versions: ['7.2', '7.3']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: curl, fileinfo, gd2, intl, mbstring, exif, openssl, pdo_odbc, pdo_sqlite, sqlite3  # optional
        ini-values: "post_max_size=256M" #optional


    - name: Check PHP Version
      run: php -v

    - name: Check Composer Version
      run: composer -V

    - name: Check PHP Extensions
      run: php -m

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ matrix.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ matrix.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

#################
#name: PHP Composer

#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

#jobs:
#  build:

#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v2

#    - name: Validate composer.json and composer.lock
#      run: composer validate

#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v2
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-

#    - name: Install dependencies
#      if: steps.composer-cache.outputs.cache-hit != 'true'
#      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
